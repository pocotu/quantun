// Script para Fase 3: Implementaci√≥n del Prototipo
document.addEventListener('DOMContentLoaded', function() {
    // Inicializaci√≥n de la p√°gina
    initPage();
    
    // Animaciones de entrada
    initAnimations();
    
    // Funcionalidades interactivas
    initInteractions();
});

// Inicializaci√≥n general
function initPage() {
    console.log('Fase 3: Implementaci√≥n del Prototipo - Cargada');
    
    // Configurar tooltips para comandos
    const commands = document.querySelectorAll('.command-line');
    commands.forEach(cmd => {
        cmd.addEventListener('click', function() {
            copyToClipboard(this.textContent);
            showTooltip(this, 'Comando copiado');
        });
    });
}

// Animaciones de entrada
function initAnimations() {
    const cards = document.querySelectorAll('.usecase-card, .command-card, .flow-card');
    
    const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry, index) => {
            if (entry.isIntersecting) {
                setTimeout(() => {
                    entry.target.style.opacity = '1';
                    entry.target.style.transform = 'translateY(0)';
                }, index * 100);
            }
        });
    }, {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    });
    
    cards.forEach(card => {
        card.style.opacity = '0';
        card.style.transform = 'translateY(20px)';
        card.style.transition = 'opacity 0.6s ease, transform 0.6s ease';
        observer.observe(card);
    });
}

// Interacciones
function initInteractions() {
    // Hover effects para las tarjetas
    const cards = document.querySelectorAll('.usecase-card, .command-card');
    cards.forEach(card => {
        card.addEventListener('mouseenter', function() {
            this.style.transform = 'translateY(-5px)';
        });
        
        card.addEventListener('mouseleave', function() {
            this.style.transform = 'translateY(0)';
        });
    });
    
    // Click handlers para comandos
    const commandButtons = document.querySelectorAll('.copy-cmd');
    commandButtons.forEach(btn => {
        btn.addEventListener('click', function(e) {
            e.stopPropagation();
            const command = this.parentElement.querySelector('.command-line').textContent;
            copyToClipboard(command);
            showTooltip(this, 'Copiado');
        });
    });
    
    // Click en badges de casos de uso
    const caseBadges = document.querySelectorAll('.case-badge');
    caseBadges.forEach(badge => {
        badge.addEventListener('click', function() {
            const isConfidentiality = this.classList.contains('tls');
            if (isConfidentiality) {
                showConfidentialityDetails();
            } else {
                showAuthenticityDetails();
            }
        });
    });
    
    // Click en methodology badge
    const methodologyBadge = document.querySelector('.methodology-badge');
    if (methodologyBadge) {
        methodologyBadge.addEventListener('click', function() {
            showBenchmarkingMethodologyDetails();
        });
    }

    // Click en compilation steps
    const compilationSteps = document.querySelectorAll('.compilation-step');
    compilationSteps.forEach(step => {
        step.addEventListener('click', function() {
            const stepTitle = this.querySelector('h4').textContent;
            showCompilationStepDetails(stepTitle);
        });
    });

    // Click en certificate management
    const certManagement = document.querySelector('.cert-management');
    if (certManagement) {
        certManagement.addEventListener('click', function() {
            showCertificateManagementDetails();
        });
    }

    // Click en nginx config
    const nginxConfig = document.querySelector('.nginx-config');
    if (nginxConfig) {
        nginxConfig.addEventListener('click', function() {
            showNginxConfigDetails();
        });
    }

    // Click en dilithium workflow
    const dilithiumWorkflow = document.querySelectorAll('.workflow-step');
    dilithiumWorkflow.forEach(step => {
        step.addEventListener('click', function() {
            const stepType = this.classList.contains('keygen-step') ? 'keygen' :
                             this.classList.contains('sign-step') ? 'sign' : 'verify';
            showDilithiumWorkflowDetails(stepType);
        });
    });
}

// Funci√≥n para copiar al portapapeles
function copyToClipboard(text) {
    if (navigator.clipboard) {
        navigator.clipboard.writeText(text).then(() => {
            console.log('Comando copiado: ', text);
        }).catch(err => {
            console.error('Error copiando comando: ', err);
            fallbackCopyTextToClipboard(text);
        });
    } else {
        fallbackCopyTextToClipboard(text);
    }
}

// Funci√≥n de respaldo para copiar texto
function fallbackCopyTextToClipboard(text) {
    const textArea = document.createElement("textarea");
    textArea.value = text;
    
    textArea.style.top = "0";
    textArea.style.left = "0";
    textArea.style.position = "fixed";
    
    document.body.appendChild(textArea);
    textArea.focus();
    textArea.select();
    
    try {
        const successful = document.execCommand('copy');
        console.log('Fallback: Copiado ' + (successful ? 'exitoso' : 'fall√≥'));
    } catch (err) {
        console.error('Fallback: No se pudo copiar', err);
    }
    
    document.body.removeChild(textArea);
}

// Mostrar tooltip
function showTooltip(element, message) {
    const tooltip = document.createElement('div');
    tooltip.className = 'copy-tooltip';
    tooltip.textContent = message;
    
    element.style.position = 'relative';
    element.appendChild(tooltip);
    
    setTimeout(() => {
        tooltip.style.opacity = '1';
        tooltip.style.transform = 'translateY(-5px)';
    }, 10);
    
    setTimeout(() => {
        tooltip.remove();
    }, 2000);
}

// Navegaci√≥n - Funci√≥n para volver al √≠ndice
function goBack() {
    window.location.href = 'index.html';
}

// Navegaci√≥n entre fases
function nextPhase() {
    window.location.href = 'fase4.html';
}

function prevPhase() {
    window.location.href = 'fase2.html';
}

// Funciones para mostrar detalles de casos de uso
function showKyberDetails() {
    const modal = createModal(
        'TLS-Kyber 768 - Detalles T√©cnicos',
        `
        <div class="modal-content-detailed">
            <h3>Par√°metros del Algoritmo</h3>
            <ul>
                <li><strong>Nivel de Seguridad:</strong> NIST Nivel 3 (AES-192 equivalente)</li>
                <li><strong>Tama√±o de Clave P√∫blica:</strong> 1,184 bytes</li>
                <li><strong>Tama√±o de Clave Privada:</strong> 2,400 bytes</li>
                <li><strong>Tama√±o del Ciphertext:</strong> 1,088 bytes</li>
            </ul>
            
            <h3>Ventajas</h3>
            <ul>
                <li>Rendimiento superior en operaciones de encapsulaci√≥n</li>
                <li>Tama√±os de clave m√°s peque√±os comparado con otros niveles</li>
                <li>Amplio soporte en implementaciones</li>
            </ul>
            
            <h3>Consideraciones</h3>
            <ul>
                <li>Mayor overhead en el handshake TLS</li>
                <li>Impacto en latencia de establecimiento de conexi√≥n</li>
            </ul>
        </div>
        `,
        'info'
    );
    document.body.appendChild(modal);
}

function showDilithiumDetails() {
    const modal = createModal(
        'Dilithium 3 - Detalles T√©cnicos',
        `
        <div class="modal-content-detailed">
            <h3>Par√°metros del Algoritmo</h3>
            <ul>
                <li><strong>Nivel de Seguridad:</strong> NIST Nivel 3 (AES-192 equivalente)</li>
                <li><strong>Tama√±o de Clave P√∫blica:</strong> 1,952 bytes</li>
                <li><strong>Tama√±o de Clave Privada:</strong> 4,000 bytes</li>
                <li><strong>Tama√±o de Firma:</strong> 3,293 bytes</li>
            </ul>
            
            <h3>Ventajas</h3>
            <ul>
                <li>Firmas deterministas</li>
                <li>Verificaci√≥n r√°pida</li>
                <li>Resistencia a ataques de canal lateral</li>
            </ul>
            
            <h3>Consideraciones</h3>
            <ul>
                <li>Firmas significativamente m√°s grandes que RSA/ECDSA</li>
                <li>Mayor tiempo de generaci√≥n de firma</li>
            </ul>
        </div>
        `,
        'info'
    );
    document.body.appendChild(modal);
}

function showConfidentialityDetails() {
    const title = 'üîí Caso de Uso 1: Confidencialidad en Tr√°nsito';
    const content = `Implementaci√≥n de TLS-Kyber para asegurar canales de comunicaci√≥n post-cu√°nticos.

üéØ **Objetivo del Prototipo:**
‚Ä¢ Caso de uso m√°s com√∫n para PQC: seguridad del canal cliente-servidor
‚Ä¢ Evaluaci√≥n de rendimiento de handshake TLS con KEMs post-cu√°nticos
‚Ä¢ Implementaci√≥n realista para generar mediciones significativas

üèóÔ∏è **Componentes de Implementaci√≥n:**
‚Ä¢ Nginx compilado con OpenSSL 3.x + oqs-provider
‚Ä¢ Certificados h√≠bridos (firma cl√°sica + KEM PQC)
‚Ä¢ Configuraci√≥n ssl_ecdh_curve: x25519_kyber768:X25519
‚Ä¢ P√°gina index.html simple para generar handshakes medibles

üîë **Decisi√≥n de Dise√±o Cr√≠tica:**
‚Ä¢ Certificado servidor: firmado con algoritmo cl√°sico (ECDSA)
‚Ä¢ KEMs: h√≠bridos post-cu√°nticos (x25519_kyber768)
‚Ä¢ Aislamiento de rendimiento: solo KEM evaluado, no firma
‚Ä¢ Medici√≥n pura del mecanismo de intercambio de claves

‚öôÔ∏è **Configuraci√≥n Nginx:**
‚Ä¢ listen 443 ssl con TLSv1.3 √∫nicamente
‚Ä¢ ssl_prefer_server_ciphers on
‚Ä¢ Grupos h√≠bridos priorizados con fallback cl√°sico
‚Ä¢ Certificados generados con CA autofirmada

üìä **Mediciones Objetivo:**
‚Ä¢ Latencia de handshake TLS completo (extremo a extremo)
‚Ä¢ Impacto de condiciones de red adversas
‚Ä¢ Comparaci√≥n directa: cl√°sico vs. h√≠brido vs. PQC puro`;
    
    const modal = createModal(title, content, 'confidentiality');
    document.body.appendChild(modal);
}

function showAuthenticityDetails() {
    const title = '‚úçÔ∏è Caso de Uso 2: Autenticidad de Documentos';
    const content = `Implementaci√≥n de firmas Dilithium para garantizar integridad y autenticidad.

üéØ **Objetivo del Prototipo:**
‚Ä¢ Evaluaci√≥n de firmas digitales post-cu√°nticas en flujo realista
‚Ä¢ Medici√≥n de primitivas criptogr√°ficas discretas: KeyGen, Sign, Verify
‚Ä¢ Aplicaci√≥n pr√°ctica: firma y verificaci√≥n de documentos

üèóÔ∏è **Implementaci√≥n Backend (FastAPI):**
‚Ä¢ Endpoint /sign: carga de archivo ‚Üí hash SHA-256 ‚Üí firma Dilithium
‚Ä¢ Endpoint /verify: documento + firma + certificado ‚Üí verificaci√≥n
‚Ä¢ Subprocess para invocar OpenSSL personalizado con comandos dgst
‚Ä¢ Alternativa: dilithium-py library para API m√°s limpia

üîë **Flujo de Firma Digital:**
‚Ä¢ Generaci√≥n par de claves: openssl req -x509 -new -newkey dilithium3
‚Ä¢ C√°lculo hash: SHA-256 del contenido (tama√±o fijo)
‚Ä¢ Firma: openssl dgst -sha256 -sign dilithium_priv.key
‚Ä¢ Verificaci√≥n: openssl dgst -sha256 -verify dilithium_pub.crt

‚ö†Ô∏è **Consideraci√≥n Cr√≠tica - "Fiat-Shamir con Abortos":**
‚Ä¢ T√©cnica de muestreo por rechazo durante firma
‚Ä¢ Tiempo de firma VARIABLE debido a "abortos" probabil√≠sticos
‚Ä¢ Distribuci√≥n de tiempos: no determinista, requiere an√°lisis estad√≠stico
‚Ä¢ Implicaciones para sistemas en tiempo real

üìä **Mediciones Espec√≠ficas:**
‚Ä¢ Tiempo de generaci√≥n de claves (una vez)
‚Ä¢ Tiempo de firma (variable - medir percentiles 95, 99)
‚Ä¢ Tiempo de verificaci√≥n (consistente)
‚Ä¢ Tama√±os: clave p√∫blica, clave privada, firma
‚Ä¢ Independencia del tama√±o de documento (hash tama√±o fijo)`;
    
    const modal = createModal(title, content, 'authenticity');
    document.body.appendChild(modal);
}

function showBenchmarkingMethodologyDetails() {
    const title = '‚è±Ô∏è Metodolog√≠a de Benchmarking (Fase 4)';
    const content = `Preparaci√≥n cr√≠tica para mediciones precisas en la siguiente fase.

üéØ **Principio de Aislamiento de Variables:**
‚Ä¢ Medir √öNICAMENTE la operaci√≥n criptogr√°fica
‚Ä¢ Pre-cargar archivos en memoria antes del timer
‚Ä¢ Excluir I/O de archivos, hashing y l√≥gica de aplicaci√≥n
‚Ä¢ Temporizador: start despu√©s de preparaci√≥n, stop inmediatamente post-crypto

üìä **Metodolog√≠a para Firmas:**
‚Ä¢ Pre-calcular hash SHA-256 del documento
‚Ä¢ Cargar claves en memoria
‚Ä¢ Timer solo para: sign() o verify()
‚Ä¢ Confirmar independencia del tama√±o de documento

üî¨ **Metodolog√≠a para TLS:**
‚Ä¢ Medici√≥n extremo a extremo del handshake completo
‚Ä¢ Incluir impacto del protocolo TLS + overhead PQC
‚Ä¢ Simulaci√≥n condiciones de red con tc+netem
‚Ä¢ N=1,000 repeticiones para significancia estad√≠stica

‚ö° **Variables Cr√≠ticas a Controlar:**
‚Ä¢ Versiones exactas de bibliotecas
‚Ä¢ Flags de compilaci√≥n (AVX2 vs. referencia)
‚Ä¢ Condiciones de red simuladas
‚Ä¢ Configuraci√≥n de algoritmos h√≠bridos

üìà **M√©tricas Objetivo:**
‚Ä¢ Latencia: tiempo de handshake, operaciones criptogr√°ficas
‚Ä¢ Recursos: ciclos CPU, memoria RSS, instrucciones
‚Ä¢ Red: bytes transmitidos, paquetes, fragmentaci√≥n
‚Ä¢ Almacenamiento: tama√±os de claves, firmas, certificados

üîß **Herramientas de Medici√≥n:**
‚Ä¢ openssl s_time para handshakes TLS
‚Ä¢ perf stat para m√©tricas de CPU
‚Ä¢ tcpdump/Wireshark para an√°lisis de red
‚Ä¢ /usr/bin/time -v para memoria`;
    
    const modal = createModal(title, content, 'methodology');
    document.body.appendChild(modal);
}

function showCertificateManagementDetails() {
    const title = 'üè∑Ô∏è Generaci√≥n y Gesti√≥n de Certificados PQC';
    const content = `Estrategia de certificados para evaluaci√≥n aislada de rendimiento de KEMs.

üéØ **Dise√±o de Certificados:**
‚Ä¢ CA autofirmada simple para entorno de pruebas
‚Ä¢ Certificado servidor: firmado con algoritmo CL√ÅSICO (ECDSA)
‚Ä¢ Objetivo: aislar rendimiento del KEM, no de verificaci√≥n de firma
‚Ä¢ Evitar sobrecarga PQC en verificaci√≥n de certificados

üîß **Proceso de Generaci√≥n:**
‚Ä¢ CA root: openssl req -x509 -new -newkey ecdsa
‚Ä¢ Certificado servidor: firmado por CA con ECDSA-SHA256
‚Ä¢ Sin firmas PQC en certificados para esta fase
‚Ä¢ Enfoque: medici√≥n pura del intercambio de claves

‚öôÔ∏è **Configuraci√≥n para Nginx:**
‚Ä¢ ssl_certificate: apunta a certificado servidor ECDSA
‚Ä¢ ssl_certificate_key: clave privada ECDSA correspondiente
‚Ä¢ ssl_ecdh_curve: x25519_kyber768:X25519 (h√≠brido)
‚Ä¢ TLS 1.3: protocol exclusivo para KEMs modernos

üîç **Decisi√≥n Metodol√≥gica:**
‚Ä¢ Separaci√≥n de concerns: KEM vs. firmas
‚Ä¢ Handshake TLS: verificaci√≥n certificado + intercambio de claves
‚Ä¢ Solo intercambio de claves usa PQC (Kyber)
‚Ä¢ Verificaci√≥n certificado: ECDSA r√°pido, overhead m√≠nimo

üìä **Beneficio para Mediciones:**
‚Ä¢ Tiempo de handshake ‚âà tiempo de KEM + overhead protocolo
‚Ä¢ Sin confusi√≥n por tiempo de verificaci√≥n de firma PQC
‚Ä¢ Comparaci√≥n directa: X25519 vs. Kyber vs. h√≠brido
‚Ä¢ Datos m√°s limpios para an√°lisis de rendimiento`;
    
    const modal = createModal(title, content, 'certificates');
    document.body.appendChild(modal);
}

function showNginxConfigDetails() {
    const title = 'üåê Configuraci√≥n de Nginx con Soporte PQC';
    const content = `Configuraci√≥n espec√≠fica para servidor web con capacidades post-cu√°nticas.

üèóÔ∏è **Compilaci√≥n desde C√≥digo Fuente:**
‚Ä¢ --with-openssl=<path-to-source>: vinculaci√≥n con OpenSSL personalizado
‚Ä¢ --with-http_ssl_module: habilitaci√≥n funcionalidad SSL/TLS
‚Ä¢ Compilaci√≥n est√°tica vs. din√°mica seg√∫n requerimientos
‚Ä¢ Instalaci√≥n en directorio aislado (/opt/nginx-pqc/)

‚öôÔ∏è **Bloque de Servidor Cr√≠tico:**
\`\`\`nginx
server {
    listen 443 ssl;
    server_name localhost;
    
    ssl_certificate /path/to/server_cert.pem;
    ssl_certificate_key /path/to/server_key.pem;
    
    ssl_protocols TLSv1.3;
    ssl_prefer_server_ciphers on;
    
    # Grupos h√≠bridos con fallback cl√°sico
    ssl_ecdh_curve x25519_kyber768:X25519;
}
\`\`\`

üîë **Configuraci√≥n de Grupos KEMs:**
‚Ä¢ x25519_kyber768: algoritmo h√≠brido principal
‚Ä¢ X25519: fallback cl√°sico para compatibilidad
‚Ä¢ Nombres espec√≠ficos dependen de versi√≥n oqs-provider
‚Ä¢ Verificaci√≥n: openssl list -key-exchange-algorithms

üì° **Protocolo TLS 1.3:**
‚Ä¢ Requerido para KEMs modernos post-cu√°nticos
‚Ä¢ Handshake optimizado vs. versiones anteriores
‚Ä¢ Soporte nativo para extensiones de criptograf√≠a
‚Ä¢ Negociaci√≥n de algoritmos durante ClientHello

üéØ **Objetivo de la Configuraci√≥n:**
‚Ä¢ Prototipo realista para mediciones de rendimiento
‚Ä¢ Entorno controlado para benchmarking
‚Ä¢ Base para comparaci√≥n algoritmos cl√°sicos vs. PQC
‚Ä¢ Simulaci√≥n de servidor web t√≠pico con capacidades futuras`;
    
    const modal = createModal(title, content, 'nginx-config');
    document.body.appendChild(modal);
}

function showDilithiumWorkflowDetails(stepType) {
    let title, content;
    
    switch(stepType) {
        case 'keygen':
            title = 'üîë Generaci√≥n de Claves Dilithium';
            content = `Proceso de generaci√≥n de par de claves para firma digital post-cu√°ntica.

üîß **Comando OpenSSL:**
‚Ä¢ openssl req -x509 -new -newkey dilithium3
‚Ä¢ -keyout dilithium_priv.key: clave privada
‚Ä¢ -out dilithium_pub.crt: certificado p√∫blico autofirmado
‚Ä¢ -nodes: sin protecci√≥n por contrase√±a (entorno pruebas)

üìä **Par√°metros Dilithium3 (ML-DSA-65):**
‚Ä¢ Nivel de seguridad: equivalente AES-192
‚Ä¢ Tama√±o clave p√∫blica: ~1952 bytes
‚Ä¢ Tama√±o clave privada: ~4000 bytes
‚Ä¢ Balance rendimiento/seguridad optimizado

‚ö° **Consideraciones de Rendimiento:**
‚Ä¢ Generaci√≥n una vez por entidad
‚Ä¢ Costo computacional alto pero amortizado
‚Ä¢ Almacenamiento persistente requerido
‚Ä¢ No cr√≠tico para latencia de operaciones frecuentes

üî¨ **Benchmarking KeyGen:**
‚Ä¢ Medici√≥n aislada del tiempo de generaci√≥n
‚Ä¢ Comparaci√≥n con ECDSA P-256 baseline
‚Ä¢ Variabilidad seg√∫n par√°metros de seguridad
‚Ä¢ Impacto de optimizaciones AVX2`;
            break;
            
        case 'sign':
            title = '‚úçÔ∏è Proceso de Firma Dilithium';
            content = `Operaci√≥n de firma digital con t√©cnica "Fiat-Shamir con Abortos".

üîß **Flujo de Firma:**
‚Ä¢ Hash SHA-256 del documento (tama√±o fijo: 32 bytes)
‚Ä¢ openssl dgst -sha256 -sign dilithium_priv.key
‚Ä¢ Resultado: signature.bin (2420-4595 bytes seg√∫n par√°metros)
‚Ä¢ Independiente del tama√±o del documento original

‚ö†Ô∏è **Muestreo por Rechazo:**
‚Ä¢ Proceso iterativo con posibles "abortos"
‚Ä¢ Prevenci√≥n de fuga de informaci√≥n de clave secreta
‚Ä¢ Tiempo de firma VARIABLE (no determinista)
‚Ä¢ Distribuci√≥n estad√≠stica con media conocida

üìä **Implicaciones para Benchmarking:**
‚Ä¢ Medir percentiles 95, 99 adem√°s de media
‚Ä¢ N=1,000+ muestras para an√°lisis estad√≠stico robusto
‚Ä¢ Comparaci√≥n con ECDSA (tiempo determinista)
‚Ä¢ Identificaci√≥n de outliers por abortos m√∫ltiples

üéØ **Sistemas Tiempo Real:**
‚Ä¢ Variabilidad puede ser problem√°tica
‚Ä¢ Considerar buffering o pre-firma
‚Ä¢ An√°lisis de worst-case scenarios
‚Ä¢ Trade-off seguridad vs. predictibilidad temporal`;
            break;
            
        case 'verify':
            title = '‚úÖ Verificaci√≥n de Firma Dilithium';
            content = `Proceso de verificaci√≥n de autenticidad e integridad del documento.

üîß **Flujo de Verificaci√≥n:**
‚Ä¢ Rec√°lculo SHA-256 del documento original
‚Ä¢ openssl dgst -sha256 -verify dilithium_pub.crt
‚Ä¢ Comparaci√≥n con signature.bin
‚Ä¢ Resultado binario: v√°lida/inv√°lida

‚ö° **Caracter√≠sticas de Rendimiento:**
‚Ä¢ Tiempo CONSISTENTE (sin abortos como en firma)
‚Ä¢ Computacionalmente m√°s r√°pido que firma
‚Ä¢ Escalable para verificaciones masivas
‚Ä¢ Optimizable con paralelizaci√≥n

üìà **Ventajas de Dilithium:**
‚Ä¢ Verificaci√≥n m√°s r√°pida vs. otros esquemas PQC
‚Ä¢ Tama√±o firma moderado vs. esquemas basados en hash
‚Ä¢ Balance √≥ptimo para aplicaciones con muchas verificaciones
‚Ä¢ Implementaciones optimizadas disponibles (AVX2)

üî¨ **Mediciones Cr√≠ticas:**
‚Ä¢ Tiempo de verificaci√≥n vs. ECDSA baseline
‚Ä¢ Throughput: verificaciones por segundo
‚Ä¢ Escalabilidad con n√∫mero de verificaciones concurrentes
‚Ä¢ Impacto de tama√±o de firma en cache de CPU

üí° **Aplicaciones T√≠picas:**
‚Ä¢ Sistemas donde documentos se firman una vez, verifican muchas
‚Ä¢ Distribuci√≥n de software con verificaci√≥n masiva
‚Ä¢ Blockchain y sistemas distribuidos
‚Ä¢ Archivos de log con integridad criptogr√°fica`;
            break;
    }
    
    const modal = createModal(title, content, 'dilithium-workflow');
    document.body.appendChild(modal);
}

// Funci√≥n para crear modales
function createModal(title, content, type = 'info') {
    const modal = document.createElement('div');
    modal.className = 'modal-overlay';
    modal.style.cssText = `
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: rgba(0, 0, 0, 0.7);
        display: flex;
        align-items: center;
        justify-content: center;
        z-index: 1000;
        backdrop-filter: blur(10px);
        animation: modalFadeIn 0.3s ease-out;
    `;
    
    const modalContent = document.createElement('div');
    modalContent.className = 'modal-content';
    modalContent.style.cssText = `
        background: white;
        border-radius: 20px;
        padding: 30px;
        max-width: 600px;
        max-height: 80vh;
        margin: 20px;
        box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
        position: relative;
        animation: modalSlideUp 0.3s ease-out;
        overflow-y: auto;
    `;
    
    // Agregar estilos de animaci√≥n si no existen
    if (!document.querySelector('#modal-animations')) {
        const style = document.createElement('style');
        style.id = 'modal-animations';
        style.textContent = `
            @keyframes modalFadeIn {
                from { opacity: 0; }
                to { opacity: 1; }
            }
            @keyframes modalSlideUp {
                from {
                    opacity: 0;
                    transform: translateY(50px) scale(0.9);
                }
                to {
                    opacity: 1;
                    transform: translateY(0) scale(1);
                }
            }
            .copy-tooltip {
                position: absolute;
                background: rgba(0, 0, 0, 0.8);
                color: white;
                padding: 6px 10px;
                border-radius: 4px;
                font-size: 0.8rem;
                top: -30px;
                left: 50%;
                transform: translateX(-50%) translateY(10px);
                opacity: 0;
                transition: all 0.3s ease;
                pointer-events: none;
                white-space: nowrap;
                z-index: 1000;
            }
        `;
        document.head.appendChild(style);
    }
    
    // Color seg√∫n tipo
    let headerColor;
    switch(type) {
        case 'success': headerColor = '#27ae60'; break;
        case 'warning': headerColor = '#f39c12'; break;
        case 'error': headerColor = '#e74c3c'; break;
        case 'info': headerColor = '#3498db'; break;
        default: headerColor = '#9b59b6';
    }
    
    modalContent.innerHTML = `
        <div style="display: flex; justify-content: space-between; align-items: flex-start; margin-bottom: 20px;">
            <h3 style="margin: 0; color: ${headerColor}; font-size: 1.5rem; line-height: 1.3; flex: 1;">${title}</h3>
            <button class="close-btn" style="
                background: none;
                border: none;
                font-size: 1.8rem;
                cursor: pointer;
                color: #999;
                padding: 5px;
                border-radius: 50%;
                width: 40px;
                height: 40px;
                display: flex;
                align-items: center;
                justify-content: center;
                transition: all 0.3s ease;
                margin-left: 15px;
                flex-shrink: 0;
            ">&times;</button>
        </div>
        <div style="line-height: 1.6; color: #333; font-size: 1rem; white-space: pre-line;">${content}</div>
    `;
    
    const closeBtn = modalContent.querySelector('.close-btn');
    closeBtn.addEventListener('click', () => {
        modal.style.animation = 'modalFadeIn 0.3s ease-out reverse';
        setTimeout(() => modal.remove(), 300);
    });
    
    closeBtn.addEventListener('mouseenter', () => {
        closeBtn.style.background = '#f0f0f0';
        closeBtn.style.transform = 'scale(1.1)';
    });
    
    closeBtn.addEventListener('mouseleave', () => {
        closeBtn.style.background = 'none';
        closeBtn.style.transform = 'scale(1)';
    });
    
    modal.addEventListener('click', (e) => {
        if (e.target === modal) {
            modal.style.animation = 'modalFadeIn 0.3s ease-out reverse';
            setTimeout(() => modal.remove(), 300);
        }
    });
    
    // Agregar soporte para tecla Escape
    const escapeHandler = (e) => {
        if (e.key === 'Escape') {
            modal.style.animation = 'modalFadeIn 0.3s ease-out reverse';
            setTimeout(() => modal.remove(), 300);
            document.removeEventListener('keydown', escapeHandler);
        }
    };
    document.addEventListener('keydown', escapeHandler);
    
    modal.appendChild(modalContent);
    return modal;
}

// Funci√≥n para mostrar informaci√≥n de herramientas
function showToolInfo(tool) {
    let info = '';
    switch(tool) {
        case 'openssl':
            info = 'Herramienta de l√≠nea de comandos para operaciones criptogr√°ficas y gesti√≥n de certificados.';
            break;
        case 'curl':
            info = 'Cliente HTTP/HTTPS para realizar pruebas de conectividad y transferencia de datos.';
            break;
        case 'nginx':
            info = 'Servidor web de alto rendimiento configurado con soporte PQC.';
            break;
        case 'docker':
            info = 'Plataforma de contenerizaci√≥n para aislar y reproducir el entorno de pruebas.';
            break;
        default:
            info = 'Herramienta especializada para el entorno de criptograf√≠a post-cu√°ntica.';
    }
    
    const tooltip = createModal(`Informaci√≥n: ${tool}`, info, 'info');
    document.body.appendChild(tooltip);
    
    setTimeout(() => {
        tooltip.remove();
    }, 3000);
}
